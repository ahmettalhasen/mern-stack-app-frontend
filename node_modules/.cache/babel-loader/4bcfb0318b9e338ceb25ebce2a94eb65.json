{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{withRouter}from\"react-router-dom\";import{logout}from\"../redux/actions\";import{Menu,MenuItem,Avatar,Divider}from\"@material-ui/core\";import{connect,useSelector}from\"react-redux\";import ExitToAppIcon from\"@material-ui/icons/ExitToApp\";import VerifiedUserIcon from\"@material-ui/icons/VerifiedUser\";var useStyles=makeStyles(function(theme){return{menuitem:{display:\"flex\",minWidth:\"200px\"},avatar:{marginRight:theme.spacing(1)}};});/**\n * Menu for user managment\n * @param {props} props\n */function KebabMenu(props){var classes=useStyles();var user=useSelector(function(state){// return the currnetly logged in user from redux store\nreturn state.user;});var onClickLogin=function onClickLogin(){// close this menu\nprops.onClose();// navigate to the login page\nprops.history.push(\"/login\");};var onClickLogout=function onClickLogout(){// trigger redux logout action\nprops.dispatch(logout());// close this menu\nprops.onClose();// navigate to the home page\nprops.history.push(\"/\");};var onClickMachineManagement=function onClickMachineManagement(){props.history.push(\"/machineManagement\");};return/*#__PURE__*/_jsxs(Menu,{open:props.open,anchorEl:props.anchor,onClose:props.onClose,getContentAnchorEl:null,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},children:[user.user?[/*#__PURE__*/_jsxs(MenuItem,{className:classes.menuitem,children:[/*#__PURE__*/_jsx(Avatar,{className:classes.avatar,children:user.user.username?user.user.username[0]:\"\"}),user.user.username]},\"user\"),/*#__PURE__*/_jsx(Divider,{},\"divider\"),/*#__PURE__*/_jsxs(MenuItem,{onClick:onClickLogout,className:classes.menuitem,children:[/*#__PURE__*/_jsx(ExitToAppIcon,{className:classes.avatar}),\"Logout\"]},\"logout\")]:[/*#__PURE__*/_jsxs(MenuItem,{onClick:onClickLogin,className:classes.menuitem,children:[/*#__PURE__*/_jsx(VerifiedUserIcon,{className:classes.avatar}),\"Login\"]},\"login\")],/*#__PURE__*/_jsx(MenuItem,{onClick:onClickMachineManagement,children:\" Machine Management\"},\"test\")]});}// attributes of props and their type\nexport default connect()(withRouter(KebabMenu));","map":{"version":3,"sources":["/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/src/components/KebabMenu.js"],"names":["React","makeStyles","withRouter","logout","Menu","MenuItem","Avatar","Divider","connect","useSelector","ExitToAppIcon","VerifiedUserIcon","useStyles","theme","menuitem","display","minWidth","avatar","marginRight","spacing","KebabMenu","props","classes","user","state","onClickLogin","onClose","history","push","onClickLogout","dispatch","onClickMachineManagement","open","anchor","vertical","horizontal","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../redux/actions\";\nimport { Menu, MenuItem, Avatar, Divider } from \"@material-ui/core\";\nimport { connect, useSelector } from \"react-redux\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\n\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: \"flex\",\n        minWidth: \"200px\",\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n\n    const user = useSelector((state) => {\n        // return the currnetly logged in user from redux store\n        return state.user;\n    });\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push(\"/login\");\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push(\"/\");\n    };\n\n    const onClickMachineManagement = () => {\n        props.history.push(\"/machineManagement\");\n    }\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n            }}\n        >\n            {user.user\n                ? [\n                      <MenuItem key=\"user\" className={classes.menuitem}>\n                          <Avatar className={classes.avatar}>\n                              {user.user.username ? user.user.username[0] : \"\"}\n                          </Avatar>\n                          {user.user.username}\n                      </MenuItem>,\n                      <Divider key=\"divider\" />,\n                      <MenuItem\n                          key=\"logout\"\n                          onClick={onClickLogout}\n                          className={classes.menuitem}\n                      >\n                          <ExitToAppIcon className={classes.avatar} />\n                          Logout\n                      </MenuItem>,\n                  ]\n                : [\n                      <MenuItem\n                          key=\"login\"\n                          onClick={onClickLogin}\n                          className={classes.menuitem}\n                      >\n                          <VerifiedUserIcon className={classes.avatar} />\n                          Login\n                      </MenuItem>,\n                  ]}\n\n            <MenuItem\n                key = \"test\" onClick={onClickMachineManagement}> Machine Management\n            </MenuItem>\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}