{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import MovieService from\"../../services/MovieService\";export function getMovies(){// when the backend call was successfull and the movies are retrieved\n// in the dispatcher the movies will be added to the global state\nfunction onSuccess(movies){return{type:\"GETMOVIES_SUCCESS\",movies:movies};}// when the backend call was failed\nfunction onFailure(error){// error handling\nconsole.log(\"failed to get the movies\",error);}return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var movies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return MovieService.getMovies();case 3:movies=_context.sent;// call onSuccess in context of redux\ndispatch(onSuccess(movies));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);onFailure(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();}export function deleteMovie(id){function onSuccess(movies){return{type:\"DELETEMOVIE_SUCCESS\",movies:movies};}function onFailure(error){console.log(\"delete movie failure\",error);}return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var movies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return MovieService.deleteMovie(id);case 3:_context2.next=5;return MovieService.getMovies();case 5:movies=_context2.sent;dispatch(onSuccess(movies));_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);onFailure(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export function addMovie(movie){function onSuccess(){return{type:\"ADDMOVIE_SUCCESS\"};}function onFailure(error){console.log(\"add movie failure\",error);}return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return MovieService.createMovie(movie);case 3:dispatch(onSuccess());_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);onFailure(_context3.t0);case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();}export function changeMovie(changedMovie){function onSuccess(movie){return{type:\"UPDATEMOVIE_SUCCESS\",movie:movie};}function onFailure(error){console.log(\"change movie failure\",error);}return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var movie;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return MovieService.updateMovie(changedMovie);case 3:movie=_context4.sent;dispatch(onSuccess(movie));_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);onFailure(_context4.t0);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();}export var getMovie=function getMovie(id){function onSuccess(movie){return{type:\"GETMOVIE_SUCCESS\",movie:movie};}function onFailure(error){console.log(\"failed to load a movie\",error);}return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var movie;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return MovieService.getMovie(id);case 3:movie=_context5.sent;dispatch(onSuccess(movie));_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);onFailure(_context5.t0);case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function(_x5,_x6){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/src/redux/actions/movieActions.js"],"names":["MovieService","getMovies","onSuccess","movies","type","onFailure","error","console","log","dispatch","deleteMovie","id","addMovie","movie","createMovie","changeMovie","changedMovie","updateMovie","getMovie","getState"],"mappings":"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","sourcesContent":["import MovieService from \"../../services/MovieService\";\n\nexport function getMovies() {\n    // when the backend call was successfull and the movies are retrieved\n    // in the dispatcher the movies will be added to the global state\n    function onSuccess(movies) {\n        return { type: \"GETMOVIES_SUCCESS\", movies: movies };\n    }\n    // when the backend call was failed\n    function onFailure(error) {\n        // error handling\n        console.log(\"failed to get the movies\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            // ask for the movies in the backend\n            let movies = await MovieService.getMovies();\n            // call onSuccess in context of redux\n            dispatch(onSuccess(movies));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function deleteMovie(id) {\n    function onSuccess(movies) {\n        return { type: \"DELETEMOVIE_SUCCESS\", movies: movies };\n    }\n    function onFailure(error) {\n        console.log(\"delete movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            await MovieService.deleteMovie(id);\n            let movies = await MovieService.getMovies();\n            dispatch(onSuccess(movies));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function addMovie(movie) {\n    function onSuccess() {\n        return { type: \"ADDMOVIE_SUCCESS\" };\n    }\n    function onFailure(error) {\n        console.log(\"add movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            await MovieService.createMovie(movie);\n            dispatch(onSuccess());\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function changeMovie(changedMovie) {\n    function onSuccess(movie) {\n        return { type: \"UPDATEMOVIE_SUCCESS\", movie: movie };\n    }\n\n    function onFailure(error) {\n        console.log(\"change movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            let movie = await MovieService.updateMovie(changedMovie);\n            dispatch(onSuccess(movie));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport const getMovie = (id) => {\n    function onSuccess(movie) {\n        return { type: \"GETMOVIE_SUCCESS\", movie: movie };\n    }\n    function onFailure(error) {\n        console.log(\"failed to load a movie\", error);\n    }\n\n    return async (dispatch, getState) => {\n        try {\n            let movie = await MovieService.getMovie(id);\n            dispatch(onSuccess(movie));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}