{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{IconButton,TableCell,TableRow,Typography}from\"@material-ui/core\";import ImageIcon from\"@material-ui/icons/Image\";import DeleteIcon from\"@material-ui/icons/Delete\";import{Rating}from\"@material-ui/lab\";// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nvar useStyles=makeStyles(function(theme){return{image:{borderRadius:theme.shape.borderRadius,boxShadow:theme.shadows[2],maxWidth:54}};});/**\n * For presenting and changing movies\n * @param {props} props\n */function MovieListRow(props){// with this you can access the above defiend style classes\nvar classes=useStyles();return/*#__PURE__*/_jsxs(TableRow,{onClick:function onClick(){return props.onClickDisplayMovie(props.movie._id);},height:\"118px\",children:[/*#__PURE__*/_jsx(TableCell,{children:props.movie.thumbnail?/*#__PURE__*/_jsx(\"img\",{src:props.movie.thumbnail,alt:\"Movie Thumbnail\",className:classes.image}):/*#__PURE__*/_jsx(ImageIcon,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:props.movie.title})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{children:props.movie.year===-1?\"No Release Year\":props.movie.year})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:!props.movie.criticsRating||props.movie.criticsRating===0?/*#__PURE__*/_jsx(Typography,{align:\"center\",children:\"No Critics Rating\"}):/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Rating,{value:props.movie.criticsRating,readOnly:true,name:\"critics-rating\"}),props.movie.criticsRating.toFixed(1)+\" / 5.0\"]})})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:!props.movie.avgAudienceRating||props.movie.avgAudienceRating===0?/*#__PURE__*/_jsx(Typography,{align:\"center\",children:\"No Audience Rating\"}):/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Rating,{value:props.movie.avgAudienceRating,readOnly:true,name:\"audience-rating\"}),props.movie.avgAudienceRating.toFixed(1)+\" / 5.0\"]})})}),props.isAdmin?/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(e){e.stopPropagation();props.onClickDeleteMovie(props.movie._id);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})}):null]},props.movie._id);}// attributes of props and their type\nexport default MovieListRow;","map":{"version":3,"sources":["/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/src/components/MovieListRow.js"],"names":["React","makeStyles","IconButton","TableCell","TableRow","Typography","ImageIcon","DeleteIcon","Rating","useStyles","theme","image","borderRadius","shape","boxShadow","shadows","maxWidth","MovieListRow","props","classes","onClickDisplayMovie","movie","_id","thumbnail","title","year","display","flexDirection","alignItems","criticsRating","toFixed","avgAudienceRating","isAdmin","e","stopPropagation","onClickDeleteMovie"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Rating } from \"@material-ui/lab\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n        maxWidth: 54,\n    },\n}));\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListRow(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    return (\n        <TableRow\n            key={props.movie._id}\n            onClick={() => props.onClickDisplayMovie(props.movie._id)}\n            height=\"118px\"\n        >\n            <TableCell>\n                {props.movie.thumbnail ? (\n                    <img\n                        src={props.movie.thumbnail}\n                        alt=\"Movie Thumbnail\"\n                        className={classes.image}\n                    />\n                ) : (\n                    <ImageIcon />\n                )}\n            </TableCell>\n            <TableCell>\n                <Typography variant=\"h6\">{props.movie.title}</Typography>\n            </TableCell>\n            <TableCell>\n                <Typography>\n                    {props.movie.year === -1\n                        ? \"No Release Year\"\n                        : props.movie.year}\n                </Typography>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.criticsRating ||\n                    props.movie.criticsRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Critics Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.criticsRating}\n                                readOnly\n                                name=\"critics-rating\"\n                            />\n                            {props.movie.criticsRating.toFixed(1) + \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.avgAudienceRating ||\n                    props.movie.avgAudienceRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Audience Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.avgAudienceRating}\n                                readOnly\n                                name=\"audience-rating\"\n                            />\n                            {props.movie.avgAudienceRating.toFixed(1) +\n                                \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            {props.isAdmin ? (\n                <TableCell>\n                    <IconButton\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            props.onClickDeleteMovie(props.movie._id);\n                        }}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </TableCell>\n            ) : null}\n        </TableRow>\n    );\n}\n\n// attributes of props and their type\nMovieListRow.propTypes = {\n    movie: PropTypes.object,\n    onClickDisplayMovie: PropTypes.func,\n    onClickDeleteMovie: PropTypes.func,\n    isAdmin: PropTypes.bool,\n};\n\nexport default MovieListRow;\n"]},"metadata":{},"sourceType":"module"}