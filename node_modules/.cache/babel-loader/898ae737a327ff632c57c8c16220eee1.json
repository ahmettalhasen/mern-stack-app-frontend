{"ast":null,"code":"import _slicedToArray from\"/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{Button,Divider,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Typography,TableSortLabel,TablePagination}from\"@material-ui/core\";import MovieListRow from\"./MovieListRow\";// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nvar useStyles=makeStyles(function(theme){return{movieListRoot:{padding:theme.spacing(2),flex:1,display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},movieListHeader:{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",paddingTop:theme.spacing(2),paddingBottom:theme.spacing(2),maxWidth:\"1000px\"},headerDivider:{margin:theme.spacing(2)},addMovieButton:{margin:theme.spacing(2)},movieListPaper:{width:\"1000px\"},image:{borderRadius:theme.shape.borderRadius,boxShadow:theme.shadows[2]}};});/**\n * header cells for sortable table columns\n * @param {props} props\n */function SortableTableHeadCell(props){var headCell=props.headCell,order=props.order,orderBy=props.orderBy,onRequestSort=props.onRequestSort;return/*#__PURE__*/_jsx(TableCell,{sortDirection:orderBy===headCell.id?order:false,align:\"center\",width:props.width,children:/*#__PURE__*/_jsx(TableSortLabel,{active:orderBy===headCell.id,direction:orderBy===headCell.id?order:\"asc\",onClick:onRequestSort,children:headCell.label})},headCell.id);}// data for sortable table columns\nvar sortableHeadCells=[{id:\"title\",label:\"Titel\",width:\"40%\"},{id:\"year\",label:\"Year\",width:\"10%\"},{id:\"criticsRating\",label:\"Critics Rating\",width:\"15%\"},{id:\"avgAudienceRating\",label:\"Audience Rating\",width:\"15%\"}];/**\n * Comparator for two objects on a generic property\n * @param {compare object a} a\n * @param {compare object b} b\n * @param {order by property name} orderBy\n * @returns 1 when b > a, -1 when a < b\n */function descendingComparator(a,b,orderBy){if(b[orderBy]<a[orderBy]){return-1;}if(b[orderBy]>a[orderBy]){return 1;}return 0;}/**\n * Get comparator for sorting table\n * @param {asc or desc} order\n * @param {order by propoerty name} orderBy\n * @returns function that compares two objects\n */function getComparator(order,orderBy){return order===\"desc\"?function(a,b){return descendingComparator(a,b,orderBy);}:function(a,b){return-descendingComparator(a,b,orderBy);};}/**\n * Sort array with respect to the initial order of the objects\n * @param {to sort array} array\n * @param {comparator for sorting} comparator\n * @returns sorted array\n */function stableSort(array,comparator){// include index into the to sortable array objects\nvar stabilizedThis=array.map(function(el,index){return[el,index];});// sort the array\nstabilizedThis.sort(function(a,b){// compare two array objects a[0] or b[0] refer to the original element of the list a[1] or b[1] would be the initial index\nvar order=comparator(a[0],b[0]);if(order!==0)return order;// if both objects have the same property value in the order by property, their initial order in the array is maintained\nreturn a[1]-b[1];});return stabilizedThis.map(function(el){return el[0];});}/**\n * For presenting and changing movies\n * @param {props} props\n */function MovieListComponent(props){// with this you can access the above defiend style classes\nvar classes=useStyles();var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),orderBy=_React$useState2[0],setOrderBy=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),order=_React$useState4[0],setOrder=_React$useState4[1];var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),page=_React$useState6[0],setPage=_React$useState6[1];var _React$useState7=React.useState(5),_React$useState8=_slicedToArray(_React$useState7,2),rowsPerPage=_React$useState8[0],setRowsPerPage=_React$useState8[1];var _onRequestSort=function onRequestSort(cellId,event){// if the current orderBy is also the clicked property then the direction of the sorting should be changed\n// otherwise the fist order direction is always ascending\nvar isAsc=orderBy===cellId&&order===\"asc\";setOrder(isAsc?\"desc\":\"asc\");// setting the called cell id as order by\nsetOrderBy(cellId);};var onChangePage=function onChangePage(event,newPage){setPage(newPage);};var onChangeRowsPerPage=function onChangeRowsPerPage(event){setRowsPerPage(parseInt(event.target.value,10));setPage(0);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.movieListRoot,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.movieListHeader,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",children:\"Welcome to the Movie Database App!\"}),/*#__PURE__*/_jsx(Divider,{className:classes.headerDivider}),/*#__PURE__*/_jsx(Typography,{align:\"center\",children:\"Here is a list of movies in our database. If you are logged in you can add, alter and delete the movies here. You can register or log in by clicking on the icon in the top right.\"})]}),/*#__PURE__*/_jsxs(Paper,{className:classes.movieListPaper,children:[/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{width:\"10%\",children:\"Picture\"}),sortableHeadCells.map(function(headCell,index){return/*#__PURE__*/_jsx(SortableTableHeadCell,{order:order,orderBy:orderBy,headCell:headCell,onRequestSort:function onRequestSort(){return _onRequestSort(headCell.id);},width:headCell.width},index);}),props.isAdmin?/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Delete\"}):null]})}),/*#__PURE__*/_jsx(TableBody,{children:stableSort(props.movies,getComparator(order,orderBy)).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(movie,index){return/*#__PURE__*/_jsx(MovieListRow,{movie:movie,onClickDisplayMovie:props.onClickDisplayMovie,onClickDeleteMovie:props.onClickDeleteMovie,isAdmin:props.isAdmin},index);})})]})}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:props.movies.length,rowsPerPage:rowsPerPage,page:page,onChangePage:onChangePage,onChangeRowsPerPage:onChangeRowsPerPage})]}),props.isAdmin?/*#__PURE__*/_jsx(Button,{onClick:props.onAddMovie,variant:\"contained\",color:\"primary\",className:classes.addMovieButton,children:\"Add Movie\"}):null]});}// attributes of props and their type\nexport default MovieListComponent;","map":{"version":3,"sources":["/Users/dilrubareyyan/Documents/Files/School/SEBA/laundrywise/frontend/src/components/MovieListComponent.js"],"names":["React","makeStyles","Button","Divider","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","TableSortLabel","TablePagination","MovieListRow","useStyles","theme","movieListRoot","padding","spacing","flex","display","flexDirection","alignItems","movieListHeader","justifyContent","paddingTop","paddingBottom","maxWidth","headerDivider","margin","addMovieButton","movieListPaper","width","image","borderRadius","shape","boxShadow","shadows","SortableTableHeadCell","props","headCell","order","orderBy","onRequestSort","id","label","sortableHeadCells","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","map","el","index","sort","MovieListComponent","classes","useState","setOrderBy","setOrder","page","setPage","rowsPerPage","setRowsPerPage","cellId","event","isAsc","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","isAdmin","movies","slice","movie","onClickDisplayMovie","onClickDeleteMovie","length","onAddMovie"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Divider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    TableSortLabel,\n    TablePagination,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport MovieListRow from \"./MovieListRow\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    movieListRoot: {\n        padding: theme.spacing(2),\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    movieListHeader: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        maxWidth: \"1000px\",\n    },\n    headerDivider: {\n        margin: theme.spacing(2),\n    },\n    addMovieButton: {\n        margin: theme.spacing(2),\n    },\n    movieListPaper: {\n        width: \"1000px\",\n    },\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n    },\n}));\n\n/**\n * header cells for sortable table columns\n * @param {props} props\n */\nfunction SortableTableHeadCell(props) {\n    const { headCell, order, orderBy, onRequestSort } = props;\n\n    return (\n        <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n            align=\"center\"\n            width={props.width}\n        >\n            <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={onRequestSort}\n            >\n                {headCell.label}\n            </TableSortLabel>\n        </TableCell>\n    );\n}\n\n// data for sortable table columns\nconst sortableHeadCells = [\n    {\n        id: \"title\",\n        label: \"Titel\",\n        width: \"40%\",\n    },\n    {\n        id: \"year\",\n        label: \"Year\",\n        width: \"10%\",\n    },\n    {\n        id: \"criticsRating\",\n        label: \"Critics Rating\",\n        width: \"15%\",\n    },\n    {\n        id: \"avgAudienceRating\",\n        label: \"Audience Rating\",\n        width: \"15%\",\n    },\n];\n\n/**\n * Comparator for two objects on a generic property\n * @param {compare object a} a\n * @param {compare object b} b\n * @param {order by property name} orderBy\n * @returns 1 when b > a, -1 when a < b\n */\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * Get comparator for sorting table\n * @param {asc or desc} order\n * @param {order by propoerty name} orderBy\n * @returns function that compares two objects\n */\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n/**\n * Sort array with respect to the initial order of the objects\n * @param {to sort array} array\n * @param {comparator for sorting} comparator\n * @returns sorted array\n */\nfunction stableSort(array, comparator) {\n    // include index into the to sortable array objects\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    // sort the array\n    stabilizedThis.sort((a, b) => {\n        // compare two array objects a[0] or b[0] refer to the original element of the list a[1] or b[1] would be the initial index\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        // if both objects have the same property value in the order by property, their initial order in the array is maintained\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListComponent(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    const [orderBy, setOrderBy] = React.useState();\n    const [order, setOrder] = React.useState();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const onRequestSort = (cellId, event) => {\n        // if the current orderBy is also the clicked property then the direction of the sorting should be changed\n        // otherwise the fist order direction is always ascending\n        const isAsc = orderBy === cellId && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n\n        // setting the called cell id as order by\n        setOrderBy(cellId);\n    };\n\n    const onChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <div className={classes.movieListRoot}>\n            <div className={classes.movieListHeader}>\n                <Typography variant=\"h4\" align=\"center\">\n                    Welcome to the Movie Database App!\n                </Typography>\n                <Divider className={classes.headerDivider} />\n                <Typography align=\"center\">\n                    Here is a list of movies in our database. If you are logged\n                    in you can add, alter and delete the movies here. You can\n                    register or log in by clicking on the icon in the top right.\n                </Typography>\n            </div>\n            <Paper className={classes.movieListPaper}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell width=\"10%\">Picture</TableCell>\n                                {sortableHeadCells.map((headCell, index) => (\n                                    <SortableTableHeadCell\n                                        key={index}\n                                        order={order}\n                                        orderBy={orderBy}\n                                        headCell={headCell}\n                                        onRequestSort={() =>\n                                            onRequestSort(headCell.id)\n                                        }\n                                        width={headCell.width}\n                                    />\n                                ))}\n                                {props.isAdmin ? (\n                                    <TableCell align=\"center\">Delete</TableCell>\n                                ) : null}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stableSort(\n                                props.movies,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((movie, index) => {\n                                    return (\n                                        <MovieListRow\n                                            key={index}\n                                            movie={movie}\n                                            onClickDisplayMovie={\n                                                props.onClickDisplayMovie\n                                            }\n                                            onClickDeleteMovie={\n                                                props.onClickDeleteMovie\n                                            }\n                                            isAdmin={props.isAdmin}\n                                        />\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={props.movies.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={onChangePage}\n                    onChangeRowsPerPage={onChangeRowsPerPage}\n                />\n            </Paper>\n            {props.isAdmin ? (\n                <Button\n                    onClick={props.onAddMovie}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.addMovieButton}\n                >\n                    Add Movie\n                </Button>\n            ) : null}\n        </div>\n    );\n}\n\n// attributes of props and their type\nMovieListComponent.propTypes = {\n    onAddMovie: PropTypes.func.isRequired,\n    onClickDeleteMovie: PropTypes.func.isRequired,\n    onClickDisplayMovie: PropTypes.func.isRequired,\n    isLoggedIn: PropTypes.bool,\n    movies: PropTypes.array,\n};\n\nexport default MovieListComponent;\n"]},"metadata":{},"sourceType":"module"}